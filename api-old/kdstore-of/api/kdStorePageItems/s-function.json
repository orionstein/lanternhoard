{
  "name": "kdStorePageItems",
  "runtime": "nodejs4.3",
  "description": "Serverless Lambda function for project: kdstore-of",
  "customName": false,
  "customRole": false,
  "handler": "api/kdStorePageItems/handler.handler",
  "timeout": 10,
  "memorySize": 1024,
  "authorizer": {},
  "custom": {
    "excludePatterns": []
  },
  "endpoints": [
    {
      "path": "kdStorePageItems/{direction}/{fromDate}/{count}",
      "method": "GET",
      "type": "AWS",
      "authorizationType": "none",
      "authorizerFunction": false,
      "apiKeyRequired": false,
      "requestParameters": {},
      "requestTemplates": {
        "application/json": "{\"fromDate\" : \"$input.params('fromDate')\",\"count\" : \"$input.params('count')\",\"direction\" : \"$input.params('direction')\"}"
      },
      "responses": {
        "400": {
          "statusCode": "400",
          "selectionPattern": ".*GETERROR.*",
          "responseParameters": {
            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-RP-AUTH,Cache-Control'",
            "method.response.header.Access-Control-Allow-Methods": "'*'",
            "method.response.header.Access-Control-Allow-Origin": "'*'"
          },
          "responseTemplates": {
            "application/json": "#set($inputRoot = $input.path('$.errorMessage'))\n$inputRoot"
          }
        },
        "default": {
          "statusCode": "200",
          "responseParameters": {
            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-RP-AUTH,Cache-Control'",
            "method.response.header.Access-Control-Allow-Methods": "'*'",
            "method.response.header.Access-Control-Allow-Origin": "'*'"
          },
          "responseModels": {
            "application/json;charset=UTF-8": "Empty"
          },
          "responseTemplates": {
            "application/json;charset=UTF-8": ""
          }
        }
      }
    }
  ],
  "events": [],
  "environment": {
    "SERVERLESS_PROJECT": "${project}",
    "SERVERLESS_STAGE": "${stage}",
    "SERVERLESS_REGION": "${region}"
  },
  "vpc": {
    "securityGroupIds": [],
    "subnetIds": []
  }
}
